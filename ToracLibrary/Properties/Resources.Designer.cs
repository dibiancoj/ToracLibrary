//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToracLibrary.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ToracLibrary.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;Provinces&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;Province&quot;&gt;
        ///          &lt;xs:complexType&gt;
        ///            &lt;xs:attribute name=&quot;id&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;
        ///            &lt;xs:attribute name=&quot;txt&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;
        ///          &lt;/xs:complexType&gt;
        ///        &lt;/x [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CanadaProvinceSchema {
            get {
                return ResourceManager.GetString("CanadaProvinceSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Provinces&gt;
        ///  &lt;Province id=&quot;ON&quot; txt=&quot;Ontario&quot; /&gt;
        ///  &lt;Province id=&quot;QC&quot; txt=&quot;Quebec&quot; /&gt;
        ///  &lt;Province id=&quot;NS&quot; txt=&quot;Nova Scotia&quot; /&gt;
        ///  &lt;Province id=&quot;NB&quot; txt=&quot;New Brunswick&quot; /&gt;
        ///  &lt;Province id=&quot;MB&quot; txt=&quot;Manitoba&quot; /&gt;
        ///  &lt;Province id=&quot;BC&quot; txt=&quot;British Columbia&quot; /&gt;
        ///  &lt;Province id=&quot;PE&quot; txt=&quot;Prince Edward Island&quot; /&gt;
        ///  &lt;Province id=&quot;SK&quot; txt=&quot;Saskatchewan&quot; /&gt;
        ///  &lt;Province id=&quot;AB&quot; txt=&quot;Alberta&quot; /&gt;
        ///  &lt;Province id=&quot;NL&quot; txt=&quot;Newfoundland And Labrador&quot; /&gt;
        ///  &lt;Province id=&quot;NT&quot; txt= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CanadaProvinceXml {
            get {
                return ResourceManager.GetString("CanadaProvinceXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;Countries&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;Country&quot;&gt;
        ///          &lt;xs:complexType&gt;
        ///            &lt;xs:attribute name=&quot;id&quot; type=&quot;xs:unsignedByte&quot; use=&quot;required&quot; /&gt;
        ///            &lt;xs:attribute name=&quot;shortname&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;
        ///            &lt;xs:attribute nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CountriesSchema {
            get {
                return ResourceManager.GetString("CountriesSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Countries&gt;
        ///  &lt;Country id=&quot;1&quot; shortname=&quot;Andorra&quot; longname=&quot;The Principality Of Andorra&quot; iso2=&quot;AD&quot; irs2=&quot;AN&quot; iso3char=&quot;AND&quot; iso3digit=&quot;20&quot; /&gt;
        ///  &lt;Country id=&quot;2&quot; shortname=&quot;United Arab Emir&quot; longname=&quot;The United Arab Emirates&quot; iso2=&quot;AE&quot; irs2=&quot;AE&quot; iso3char=&quot;ARE&quot; iso3digit=&quot;784&quot; /&gt;
        ///  &lt;Country id=&quot;3&quot; shortname=&quot;Afghanistan&quot; longname=&quot;The Islamic Republic Of Afghanistan&quot; iso2=&quot;AF&quot; irs2=&quot;AF&quot; iso3char=&quot;AFG&quot; iso3digit=&quot;4&quot; /&gt;
        ///  &lt;Country id=&quot;4&quot; shortname=&quot;Antigua &amp;amp;Barbud [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CountriesXml {
            get {
                return ResourceManager.GetString("CountriesXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;States&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;State&quot;&gt;
        ///          &lt;xs:complexType&gt;
        ///            &lt;xs:attribute name=&quot;id&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;
        ///            &lt;xs:attribute name=&quot;txt&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;
        ///          &lt;/xs:complexType&gt;
        ///        &lt;/xs:elem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnitedStatesSchema {
            get {
                return ResourceManager.GetString("UnitedStatesSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;States&gt;
        ///  &lt;State id=&quot;AL&quot; txt=&quot;Alabama&quot; /&gt;
        ///  &lt;State id=&quot;AK&quot; txt=&quot;Alaska&quot; /&gt;
        ///  &lt;State id=&quot;AZ&quot; txt=&quot;Arizona&quot; /&gt;
        ///  &lt;State id=&quot;AR&quot; txt=&quot;Arkansas&quot; /&gt;
        ///  &lt;State id=&quot;CA&quot; txt=&quot;California&quot; /&gt;
        ///  &lt;State id=&quot;CO&quot; txt=&quot;Colorado&quot; /&gt;
        ///  &lt;State id=&quot;CT&quot; txt=&quot;Connecticut&quot; /&gt;
        ///  &lt;State id=&quot;DE&quot; txt=&quot;Delaware&quot; /&gt;
        ///  &lt;State id=&quot;DC&quot; txt=&quot;District Of Columbia&quot; /&gt;
        ///  &lt;State id=&quot;FL&quot; txt=&quot;Florida&quot; /&gt;
        ///  &lt;State id=&quot;GA&quot; txt=&quot;Georgia&quot; /&gt;
        ///  &lt;State id=&quot;HI&quot; txt=&quot;Hawaii&quot; /&gt;
        ///  &lt;State id=&quot;ID&quot; txt= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnitedStatesXml {
            get {
                return ResourceManager.GetString("UnitedStatesXml", resourceCulture);
            }
        }
    }
}
