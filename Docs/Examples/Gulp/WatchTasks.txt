gulp.task('watchTask', function () {
    gulp.watch("wwwroot/js/**/*.js", ['js']); <-- array with 'js' is the gulp tasks to run when something changed
});


or 
gulp.task('default', ....


1. This just start the watch task while developing  in the task runner explorer
2. add /// <binding ProjectOpened='default' /> on the top of the gulp file or in the task runner bind to on solution start (the binding creates the /// <bindin... tag at the top of the file). This way when the solution opens it starts the watcher


------------------------------------------------------------------------------------------------
Note: if this runs twice this usually means you are creating something in default that is raising another event in the file change
ie: 
Files
	Distribution
	Services

So the service file raises a change which goes and creates a distribution which raises again

1. Move the distribution outside of the folder you are watching.
2. Use the following - which excludes the distribution folder. ie: ! [not glob pattern]

gulp.task('default', function () {
    //gulp.watch(["wwwroot/js/framework/**/*.js", "wwwroot/js/services/**/*.js", "wwwroot/js/pages/**/*.js"], ['js']);
    gulp.watch(["wwwroot/js/**/*.js", "!wwwroot/js/distribution/**/*.js"], ['js']);
});

gulp.task("js", () => {
     gulp.src("wwwroot/js/Pages/*.js")
        .pipe(webpackStream(webpackConfig), webpack)
         .pipe(gulp.dest("wwwroot/js/Distribution"));
});
